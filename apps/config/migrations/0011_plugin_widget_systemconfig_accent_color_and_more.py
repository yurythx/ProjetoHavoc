# Generated by Django 5.2.1 on 2025-05-26 18:13

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('config', '0010_systemconfig_favicon_systemconfig_logo_principal'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Plugin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nome do plugin', max_length=100)),
                ('slug', models.SlugField(blank=True, max_length=120, unique=True)),
                ('description', models.TextField(blank=True, help_text='Descrição do plugin')),
                ('plugin_type', models.CharField(choices=[('widget', 'Widget'), ('middleware', 'Middleware'), ('template_tag', 'Template Tag'), ('context_processor', 'Context Processor'), ('command', 'Comando'), ('api', 'API'), ('integration', 'Integração'), ('utility', 'Utilitário')], default='utility', max_length=20)),
                ('version', models.CharField(default='1.0.0', help_text='Versão do plugin', max_length=20)),
                ('author', models.CharField(blank=True, help_text='Autor do plugin', max_length=100)),
                ('author_email', models.EmailField(blank=True, help_text='Email do autor', max_length=254)),
                ('homepage', models.URLField(blank=True, help_text='Site do plugin')),
                ('module_path', models.CharField(help_text='Caminho do módulo Python (ex: apps.plugins.meu_plugin)', max_length=200)),
                ('entry_point', models.CharField(default='main', help_text='Função de entrada do plugin', max_length=100)),
                ('dependencies', models.JSONField(blank=True, default=list, help_text='Lista de dependências do plugin')),
                ('config_schema', models.JSONField(blank=True, default=dict, help_text='Schema de configuração do plugin')),
                ('config_data', models.JSONField(blank=True, default=dict, help_text='Dados de configuração do plugin')),
                ('status', models.CharField(choices=[('active', 'Ativo'), ('inactive', 'Inativo'), ('error', 'Erro'), ('updating', 'Atualizando'), ('installing', 'Instalando')], default='inactive', max_length=20)),
                ('is_core', models.BooleanField(default=False, help_text='Plugin do sistema (não pode ser removido)')),
                ('auto_load', models.BooleanField(default=True, help_text='Carregar automaticamente na inicialização')),
                ('required_permissions', models.JSONField(blank=True, default=list, help_text='Permissões necessárias para usar o plugin')),
                ('install_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('last_error', models.TextField(blank=True, help_text='Último erro ocorrido')),
            ],
            options={
                'verbose_name': 'Plugin',
                'verbose_name_plural': 'Plugins',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Widget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nome do widget', max_length=100)),
                ('slug', models.SlugField(blank=True, max_length=120, unique=True)),
                ('description', models.TextField(blank=True, help_text='Descrição do widget')),
                ('widget_type', models.CharField(choices=[('chart', 'Gráfico'), ('stats', 'Estatísticas'), ('list', 'Lista'), ('calendar', 'Calendário'), ('weather', 'Clima'), ('news', 'Notícias'), ('tasks', 'Tarefas'), ('notes', 'Notas'), ('custom', 'Personalizado')], default='custom', max_length=20)),
                ('size', models.CharField(choices=[('small', 'Pequeno (1x1)'), ('medium', 'Médio (2x1)'), ('large', 'Grande (2x2)'), ('wide', 'Largo (3x1)'), ('tall', 'Alto (1x3)'), ('extra-large', 'Extra Grande (3x3)')], default='medium', max_length=20)),
                ('position_x', models.PositiveIntegerField(default=0, help_text='Posição horizontal no grid')),
                ('position_y', models.PositiveIntegerField(default=0, help_text='Posição vertical no grid')),
                ('order', models.PositiveIntegerField(default=0, help_text='Ordem de exibição')),
                ('is_active', models.BooleanField(default=True, help_text='Widget ativo')),
                ('is_public', models.BooleanField(default=False, help_text='Visível para todos os usuários')),
                ('required_permission', models.CharField(blank=True, help_text='Permissão necessária para ver o widget', max_length=100)),
                ('config_json', models.JSONField(blank=True, default=dict, help_text='Configurações específicas do widget em JSON')),
                ('template_path', models.CharField(blank=True, help_text='Caminho para template personalizado', max_length=200)),
                ('custom_css', models.TextField(blank=True, help_text='CSS personalizado para o widget')),
                ('custom_js', models.TextField(blank=True, help_text='JavaScript personalizado para o widget')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Widget',
                'verbose_name_plural': 'Widgets',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.AddField(
            model_name='systemconfig',
            name='accent_color',
            field=models.CharField(default='#4cc9f0', help_text='Cor de destaque (hex) - ex: #4cc9f0', max_length=7),
        ),
        migrations.AddField(
            model_name='systemconfig',
            name='enable_breadcrumbs',
            field=models.BooleanField(default=True, help_text='Exibir breadcrumbs de navegação'),
        ),
        migrations.AddField(
            model_name='systemconfig',
            name='enable_dark_mode_toggle',
            field=models.BooleanField(default=True, help_text='Permitir alternância entre modo claro/escuro'),
        ),
        migrations.AddField(
            model_name='systemconfig',
            name='enable_notifications',
            field=models.BooleanField(default=True, help_text='Habilitar sistema de notificações'),
        ),
        migrations.AddField(
            model_name='systemconfig',
            name='enable_search',
            field=models.BooleanField(default=True, help_text='Habilitar busca global'),
        ),
        migrations.AddField(
            model_name='systemconfig',
            name='google_analytics_id',
            field=models.CharField(blank=True, help_text='ID do Google Analytics (ex: GA-XXXXXXXXX-X)', max_length=20),
        ),
        migrations.AddField(
            model_name='systemconfig',
            name='header_style',
            field=models.CharField(choices=[('fixed', 'Fixo'), ('static', 'Estático'), ('transparent', 'Transparente')], default='fixed', help_text='Estilo do cabeçalho', max_length=20),
        ),
        migrations.AddField(
            model_name='systemconfig',
            name='meta_author',
            field=models.CharField(blank=True, help_text='Autor do site para meta tags', max_length=100),
        ),
        migrations.AddField(
            model_name='systemconfig',
            name='meta_keywords',
            field=models.TextField(blank=True, help_text='Palavras-chave para SEO (separadas por vírgula)'),
        ),
        migrations.AddField(
            model_name='systemconfig',
            name='notification_position',
            field=models.CharField(choices=[('top-right', 'Superior Direita'), ('top-left', 'Superior Esquerda'), ('bottom-right', 'Inferior Direita'), ('bottom-left', 'Inferior Esquerda'), ('top-center', 'Superior Centro'), ('bottom-center', 'Inferior Centro')], default='top-right', help_text='Posição das notificações', max_length=20),
        ),
        migrations.AddField(
            model_name='systemconfig',
            name='primary_color',
            field=models.CharField(default='#4361ee', help_text='Cor primária (hex) - ex: #4361ee', max_length=7),
        ),
        migrations.AddField(
            model_name='systemconfig',
            name='secondary_color',
            field=models.CharField(default='#6c757d', help_text='Cor secundária (hex) - ex: #6c757d', max_length=7),
        ),
        migrations.AddField(
            model_name='systemconfig',
            name='sidebar_style',
            field=models.CharField(choices=[('fixed', 'Fixo'), ('collapsible', 'Recolhível'), ('overlay', 'Sobreposição'), ('mini', 'Mini')], default='fixed', help_text='Estilo da barra lateral', max_length=20),
        ),
        migrations.AddField(
            model_name='systemconfig',
            name='theme',
            field=models.CharField(choices=[('default', 'Padrão'), ('dark', 'Escuro'), ('light', 'Claro'), ('corporate', 'Corporativo'), ('modern', 'Moderno'), ('minimal', 'Minimalista'), ('custom', 'Personalizado')], default='default', help_text='Tema visual do sistema', max_length=20),
        ),
        migrations.CreateModel(
            name='ConfigBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nome do backup', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Descrição do backup')),
                ('backup_type', models.CharField(choices=[('manual', 'Manual'), ('automatic', 'Automático'), ('scheduled', 'Agendado'), ('pre_update', 'Pré-atualização')], default='manual', max_length=20)),
                ('system_config', models.JSONField(help_text='Configurações do sistema')),
                ('app_configs', models.JSONField(help_text='Configurações de apps')),
                ('environment_variables', models.JSONField(help_text='Variáveis de ambiente')),
                ('database_configs', models.JSONField(help_text='Configurações de banco')),
                ('ldap_configs', models.JSONField(help_text='Configurações LDAP')),
                ('email_configs', models.JSONField(help_text='Configurações de email')),
                ('social_configs', models.JSONField(help_text='Configurações sociais')),
                ('widgets', models.JSONField(default=list, help_text='Configurações de widgets')),
                ('menus', models.JSONField(default=list, help_text='Configurações de menus')),
                ('plugins', models.JSONField(default=list, help_text='Configurações de plugins')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('file_size', models.PositiveIntegerField(default=0, help_text='Tamanho do backup em bytes')),
                ('expires_at', models.DateTimeField(blank=True, help_text='Data de expiração do backup', null=True)),
                ('is_protected', models.BooleanField(default=False, help_text='Backup protegido contra exclusão automática')),
                ('created_by', models.ForeignKey(blank=True, help_text='Usuário que criou o backup', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Backup de Configuração',
                'verbose_name_plural': 'Backups de Configuração',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MenuConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nome do item do menu', max_length=100)),
                ('slug', models.SlugField(blank=True, max_length=120, unique=True)),
                ('menu_type', models.CharField(choices=[('main', 'Menu Principal'), ('sidebar', 'Menu Lateral'), ('footer', 'Menu Rodapé'), ('user', 'Menu do Usuário'), ('admin', 'Menu Administrativo')], default='main', max_length=20)),
                ('title', models.CharField(help_text='Título exibido', max_length=100)),
                ('url', models.CharField(blank=True, help_text='URL ou nome da view', max_length=200)),
                ('icon_type', models.CharField(choices=[('fontawesome', 'Font Awesome'), ('bootstrap', 'Bootstrap Icons'), ('custom', 'Personalizado')], default='fontawesome', max_length=20)),
                ('icon', models.CharField(blank=True, help_text='Classe do ícone', max_length=50)),
                ('order', models.PositiveIntegerField(default=0, help_text='Ordem de exibição')),
                ('is_active', models.BooleanField(default=True, help_text='Item ativo')),
                ('is_external', models.BooleanField(default=False, help_text='Link externo')),
                ('open_in_new_tab', models.BooleanField(default=False, help_text='Abrir em nova aba')),
                ('required_permission', models.CharField(blank=True, help_text='Permissão necessária para ver o item', max_length=100)),
                ('required_group', models.CharField(blank=True, help_text='Grupo necessário para ver o item', max_length=100)),
                ('staff_only', models.BooleanField(default=False, help_text='Apenas para staff')),
                ('authenticated_only', models.BooleanField(default=False, help_text='Apenas para usuários autenticados')),
                ('css_class', models.CharField(blank=True, help_text='Classes CSS adicionais', max_length=100)),
                ('badge_text', models.CharField(blank=True, help_text="Texto do badge (ex: 'Novo', '5')", max_length=20)),
                ('badge_color', models.CharField(blank=True, help_text="Cor do badge (ex: 'primary', 'danger')", max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, help_text='Item pai (para submenus)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='config.menuconfig')),
            ],
            options={
                'verbose_name': 'Configuração de Menu',
                'verbose_name_plural': 'Configurações de Menu',
                'ordering': ['menu_type', 'order', 'title'],
            },
        ),
    ]
